# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
#getwd()
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
#setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
dados <- read.csv("Crime_Data_from_2020_to_Present.csv")
nomes_das_colunas <- colnames(dados)
print(nomes_das_colunas)
dados <- dados[, !(names(dados) %in% c("DR_NO", "Rpt.Dist.No", "Status", "Premis.Cd", "Weapon.Used.Cd"))]
dados_filtrados <- dados[!is.na(dados$Vict.Age) & dados$Vict.Age > 0, ]
ggplot(dados_filtrados, aes(x = Vict.Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribuicao das Idades das Vitimas de Crimes",
x = "Idade da Vitima",
y = "Frequencia") +
theme_minimal()
armas_frequencia <- dados %>%
group_by(Weapon.Desc) %>%
summarise(Contagem = n()) %>%
arrange(desc(Contagem)) %>%
top_n(10)
ggplot(armas_frequencia, aes(x = reorder(Weapon.Desc, Contagem), y = Contagem)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Armas Mais Utilizadas em Crimes",
x = "Tipo de Arma",
y = "Numero de Ocorrencias"
) +
coord_flip() +
theme_minimal()
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
#getwd()
#setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
#getwd()
#setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
install.packages("rmdformats")
library(rmdformats)
# Pacotes necessários
library(knitr)       # Para gerar tabelas formatadas
library(ggplot2)     # Para visualizações gráficas
library(dplyr)       # Para manipulação de dados
library(rmdformats)  # Para o template do relatório
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
#getwd()
#setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
dados_filtrados <- dados[!is.na(dados$Vict.Age) & dados$Vict.Age > 0, ]
ggplot(dados_filtrados, aes(x = Vict.Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribuicao das Idades das Vitimas de Crimes",
x = "Idade da Vitima",
y = "Frequencia") +
theme_minimal()
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
---
title: "Análise de Dados de Crimes em Los Angeles (2020-Presente)"
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de datas",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
)
)
# Exibir a tabela formatada
kable(libs_usadas, caption = "Bibliotecas Utilizadas no Projeto")
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de dates",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
),
stringsAsFactors = FALSE
)
# Converter para UTF-8
libs_usadas <- data.frame(lapply(libs_usadas, function(x) iconv(x, to = "UTF-8")))
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de dates",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
),
stringsAsFactors = FALSE
)
# Converter para UTF-8
libs_usadas <- data.frame(lapply(libs_usadas, function(x) iconv(x, to = "UTF-8")))
#getwd()
#setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
library(knitr)
library(ggplot2)
library(dplyr)
libs_usadas <- data.frame(
Biblioteca = c("ggplot2", "dplyr", "tidyr", "lubridate", "readr", "knitr"),
Funcao_Principal = c(
"Visualização de dados",
"Manipulação de dados",
"Transformação e organização de dados",
"Manipulação de dates",
"Leitura de arquivos CSV",
"Geração de tabelas formatadas"
),
stringsAsFactors = FALSE
)
# Converter para UTF-8
libs_usadas <- data.frame(lapply(libs_usadas, function(x) iconv(x, to = "UTF-8")))
#getwd()
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
#setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
dados <- read.csv("Crime_Data_from_2020_to_Present.csv")
nomes_das_colunas <- colnames(dados)
print(nomes_das_colunas)
dados <- dados[, !(names(dados) %in% c("DR_NO", "Rpt.Dist.No", "Status", "Premis.Cd", "Weapon.Used.Cd"))]
dados_filtrados <- dados[!is.na(dados$Vict.Age) & dados$Vict.Age > 0, ]
ggplot(dados_filtrados, aes(x = Vict.Age)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Distribuicao das Idades das Vitimas de Crimes",
x = "Idade da Vitima",
y = "Frequencia") +
theme_minimal()
armas_frequencia <- dados %>%
group_by(Weapon.Desc) %>%
summarise(Contagem = n()) %>%
arrange(desc(Contagem)) %>%
top_n(10)
ggplot(armas_frequencia, aes(x = reorder(Weapon.Desc, Contagem), y = Contagem)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Armas Mais Utilizadas em Crimes",
x = "Tipo de Arma",
y = "Numero de Ocorrencias"
) +
coord_flip() +
theme_minimal()
install.packages("rmdformats")
library(rmdformats)
library(knitr)
library(ggplot2)
library(dplyr)
library(rmdformats)
library(knitr)
library(ggplot2)
library(dplyr)
library(rmdformats)
library(ggplot2)
library(reshape2)
data("VADeaths")
# Converter a matriz em um data frame
VADeaths_df <- as.data.frame(VADeaths)
VADeaths_df$Age <- rownames(VADeaths_df)  # Adicionar coluna de idade
# Transformar os dados para o formato longo
VADeaths_long <- melt(VADeaths_df, id.vars = "Age", variable.name = "Group", value.name = "Deaths")
# Criar o gráfico de barras empilhadas
ggplot(VADeaths_long, aes(x = Age, y = Deaths, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Taxa de Mortalidade por Idade e Grupo",
x = "Faixa Etária",
y = "Taxa de Mortalidade (por 1000)",
fill = "Grupo") +
scale_fill_manual(values = c("Rural Male" = "blue", "Rural Female" = "red",
"Urban Male" = "green", "Urban Female" = "purple")) +
theme_minimal()
estagios <- c("moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"leve", "severo", "moderado", "moderado", "moderado", "leve")
frequencia <- table(estagios)
porcentagem <- round(100 * frequencia / sum(frequencia), 1)
cores <- c("leve" = "lightgreen", "moderado" = "orange", "severo" = "red")
pie(frequencia,
labels = paste(porcentagem, "%"),
col = cores[names(frequencia)],
main = "Classificação da Doença em Pacientes")
legend("topright",
legend = names(frequencia),
fill = cores[names(frequencia)],
title = "Estágios da Doença")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Faculdade/Repositorios/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Projeto_FINAL")
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova_Final")
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova Final")
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova_Final")
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova Final")
# Carregar bibliotecas necessárias
library(HSAUR3)  # Para acessar o dataset flu
library(ggplot2)
library(reshape2)
library(HSAUR3)
library(ggplot2)
library(reshape2)
install.packages("HSAUR3")
library(ggplot2)
library(ggplot2)
library(reshape2)
library(HSAUR3)
library(ggplot2)
library(ggplot2)
library(reshape2)
library(HSAUR3)
library(ggplot2)
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova Final")
data("VADeaths")
VADeaths_df <- as.data.frame(VADeaths)
VADeaths_df$Age <- rownames(VADeaths_df)
VADeaths_long <- melt(VADeaths_df, id.vars = "Age", variable.name = "Group", value.name = "Deaths")
ggplot(VADeaths_long, aes(x = Age, y = Deaths, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Taxa de Mortalidade por Idade e Grupo",
x = "Faixa Etária",
y = "Taxa de Mortalidade (por 1000)",
fill = "Grupo") +
scale_fill_manual(values = c("Rural Male" = "blue", "Rural Female" = "red",
"Urban Male" = "green", "Urban Female" = "purple")) +
theme_minimal()
estagios <- c("moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"leve", "severo", "moderado", "moderado", "moderado", "leve")
frequencia <- table(estagios)
porcentagem <- round(100 * frequencia / sum(frequencia), 1)
cores <- c("leve" = "lightgreen", "moderado" = "orange", "severo" = "red")
pie(frequencia,
labels = paste(porcentagem, "%"),
col = cores[names(frequencia)],
main = "Classificação da Doença em Pacientes")
legend("topright",
legend = names(frequencia),
fill = cores[names(frequencia)],
title = "Estágios da Doença")
# Passo 1: Carregar o dataset flu
data("flu")
idades <- flu$age  # Extrair as idades das mortes
library(ggplot2)
library(reshape2)
library(HSAUR3)
library(ggplot2)
setwd("C:/Users/Pichau/Desktop/Faculdade/Projects/Repositorio_Academico_Multidisciplinar/Computacao_Dados/Prova Final")
data("VADeaths")
VADeaths_df <- as.data.frame(VADeaths)
VADeaths_df$Age <- rownames(VADeaths_df)
VADeaths_long <- melt(VADeaths_df, id.vars = "Age", variable.name = "Group", value.name = "Deaths")
ggplot(VADeaths_long, aes(x = Age, y = Deaths, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Taxa de Mortalidade por Idade e Grupo",
x = "Faixa Etária",
y = "Taxa de Mortalidade (por 1000)",
fill = "Grupo") +
scale_fill_manual(values = c("Rural Male" = "blue", "Rural Female" = "red",
"Urban Male" = "green", "Urban Female" = "purple")) +
theme_minimal()
estagios <- c("moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"leve", "severo", "moderado", "moderado", "moderado", "leve")
frequencia <- table(estagios)
porcentagem <- round(100 * frequencia / sum(frequencia), 1)
cores <- c("leve" = "lightgreen", "moderado" = "orange", "severo" = "red")
pie(frequencia,
labels = paste(porcentagem, "%"),
col = cores[names(frequencia)],
main = "Classificação da Doença em Pacientes")
legend("topright",
legend = names(frequencia),
fill = cores[names(frequencia)],
title = "Estágios da Doença")
# Passo 1: Carregar o dataset flu
data("flu")
idades <- flu$age  # Extrair as idades das mortes
# Passo 1: Carregar o dataset flu
data("flu.csv")
idades <- flu$age  # Extrair as idades das mortes
# Passo 1: Carregar o dataset flu
flu <- data("flu.csv")
idades <- flu$age  # Extrair as idades das mortes
# Passo 1: Carregar o dataset flu
flu <- read.csv("flu.csv")
idades <- flu$age  # Extrair as idades das mortes
# Passo 2: Histograma e curva de densidade da população
ggplot(data.frame(idades), aes(x = idades)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black") +
geom_density(color = "red", linewidth = 1) +
labs(title = "Distribuição das Idades das Mortes (População)",
x = "Idade",
y = "Densidade") +
theme_minimal()
# Passo 3: Criar 200 médias de amostras com tamanho n = 35
set.seed(123)  # Para reproducibilidade
n_amostras <- 200
tamanho_amostra <- 35
medias_amostrais <- replicate(n_amostras, mean(sample(idades, tamanho_amostra, replace = TRUE)))
# Passo 4: Histograma e curva de densidade das médias amostrais
ggplot(data.frame(medias_amostrais), aes(x = medias_amostrais)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightgreen", color = "black") +
geom_density(color = "blue", linewidth = 1) +
labs(title = "Distribuição das Médias Amostrais (n = 35)",
x = "Média Amostral",
y = "Densidade") +
theme_minimal()
load("bdims.RData")
alturas_mulheres <- bdims$hgt[bdims$sex == 0]
media <- mean(alturas_mulheres)
desvio_padrao <- sd(alturas_mulheres)
n <- length(alturas_mulheres)
z <- qnorm(1 - (1 - 0.985) / 2)
erro_padrao <- desvio_padrao / sqrt(n)
limite_inferior <- media - z * erro_padrao
limite_superior <- media + z * erro_padrao
sprintf("[%.2f-%.2f]", limite_inferior, limite_superior)
load("bdims.RData")
alturas_mulheres <- bdims$hgt[bdims$sex == 0]
media <- mean(alturas_mulheres)
desvio_padrao <- sd(alturas_mulheres)
n <- length(alturas_mulheres)
z <- qnorm(1 - (1 - 0.985) / 2)
erro_padrao <- desvio_padrao / sqrt(n)
limite_inferior <- media - z * erro_padrao
limite_superior <- media + z * erro_padrao
sprintf("[%.2f-%.2f]", limite_inferior, limite_superior)
View(VADeaths)
data("VADeaths")
VADeaths_df <- as.data.frame(VADeaths)
VADeaths_df$Age <- rownames(VADeaths_df)
VADeaths_long <- melt(VADeaths_df, id.vars = "Age", variable.name = "Group", value.name = "Deaths")
ggplot(VADeaths_long, aes(x = Age, y = Deaths, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Taxa de Mortalidade por Idade e Grupo",
x = "Faixa Etária",
y = "Taxa de Mortalidade (por 1000)",
fill = "Grupo") +
scale_fill_manual(values = c("Rural Male" = "blue", "Rural Female" = "red",
"Urban Male" = "green", "Urban Female" = "yellow")) +
theme_minimal()
estagios <- c("moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"leve", "severo", "moderado", "moderado", "moderado", "leve")
frequencia <- table(estagios)
porcentagem <- round(100 * frequencia / sum(frequencia), 1)
cores <- c("leve" = "green", "moderado" = "orange", "severo" = "red")
pie(frequencia,
labels = paste(porcentagem, "%"),
col = cores[names(frequencia)],
main = "Classificação da Doença em Pacientes")
legend("topright",
legend = names(frequencia),
fill = cores[names(frequencia)],
title = "Estágios da Doença")
estagios <- c("moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"moderado", "leve", "leve", "severo", "leve", "moderado", "moderado",
"leve", "severo", "moderado", "moderado", "moderado", "leve")
frequencia <- table(estagios)
porcentagem <- round(100 * frequencia / sum(frequencia), 1)
cores <- c("leve" = "green", "moderado" = "blue", "severo" = "red")
pie(frequencia,
labels = paste(porcentagem, "%"),
col = cores[names(frequencia)],
main = "Classificação da Doença em Pacientes")
legend("topright",
legend = names(frequencia),
fill = cores[names(frequencia)],
title = "Estágios da Doença")
